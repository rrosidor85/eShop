# eShop â€“ CI for .NET 9 / ASP.NET Core (cross-platform)
# Restores, builds, tests, and publishes the AppHost artifact.

trigger:
  - main
pr:
  - main

pool:
  vmImage: 'ubuntu-latest'    # Microsoft-hosted Linux agent

variables:
  buildConfiguration: 'Release'
  solution: 'eShop.sln'       # repo root solution name

steps:
  # Use .NET 9 SDK
  - task: UseDotNet@2
    displayName: 'Use .NET 9 SDK'
    inputs:
      version: '9.0.x'
      includePreviewVersions: false

  # Cut CI noise / speed first-time experience
  - script: |
      echo "##vso[task.setvariable variable=DOTNET_CLI_TELEMETRY_OPTOUT]1"
      echo "##vso[task.setvariable variable=DOTNET_SKIP_FIRST_TIME_EXPERIENCE]1"
    displayName: 'Set CI env vars'

  # Cache NuGet packages for faster runs
  - task: Cache@2
    displayName: 'Cache NuGet'
    inputs:
      key: 'nuget | "$(Agent.OS)" | **/*.csproj, **/*.props, **/*.targets, **/nuget.config'
      restoreKeys: 'nuget | "$(Agent.OS)"'
      path: $(NUGET_PACKAGES)

  # Restore
  - script: |
      dotnet --info
      dotnet restore $(solution)
    displayName: 'Restore'

  # Build
  - script: |
      dotnet build $(solution) -c $(buildConfiguration) --no-restore
    displayName: 'Build'

  # Test (will pick up any test projects in the solution)
  - script: |
      dotnet test $(solution) -c $(buildConfiguration) --no-build --verbosity normal
    displayName: 'Test'

  # Publish the Aspire AppHost so you have something to download/run
  - script: |
      dotnet publish src/eShop.AppHost/eShop.AppHost.csproj \
        -c $(buildConfiguration) \
        -o $(Build.ArtifactStagingDirectory)/apphost
    displayName: 'Publish AppHost'

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: drop
    displayName: 'Publish artifacts'
